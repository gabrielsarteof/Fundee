/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retorna a mensagem de saudação padrão */
        get: operations["AppController_getHello"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Registrar novo usuário */
        post: operations["AuthController_register"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/request-nonce": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Solicitar nonce para autenticação */
        post: operations["AuthController_getNonce"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Verificar assinatura e gerar JWT */
        post: operations["AuthController_login"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/nfts/generate-metadata": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Gerar metadata e armazenar no IPFS */
        post: operations["NftController_generateMetadata"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/nfts/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Registrar NFT na blockchain */
        post: operations["NftController_registerNft"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        RegisterDto: {
            /**
             * @description Endereço Ethereum do usuário
             * @example 0x1234abcd5678efgh9012ijklmnopqrstuvwx
             */
            address: string;
        };
        RequestNonceResponseDto: {
            /**
             * @description Nonce gerado para assinar
             * @example random-string-nonce
             */
            nonce: string;
        };
        LoginDto: {
            /**
             * @description Endereço Ethereum do usuário
             * @example 0x1234abcd5678efgh9012ijklmnopqrstuvwx
             */
            address: string;
            /**
             * @description Assinatura gerada pelo usuário para provar propriedade do address
             * @example 0xabcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef1
             */
            signature: string;
        };
        LoginResponseDto: {
            /**
             * @description Token de acesso JWT
             * @example ey…jwt-token…abc
             */
            accessToken: string;
        };
        Attribute: {
            /**
             * @description Tipo de trait do atributo
             * @example Background
             */
            trait_type: string;
            /**
             * @description Valor do atributo
             * @example Blue
             */
            value: string;
        };
        CreateMetadataDto: {
            /**
             * @description Nome da NFT
             * @example Minha NFT
             */
            name: string;
            /**
             * @description Descrição da NFT
             * @example Descrição detalhada da minha NFT
             */
            description?: string;
            /**
             * @description URL da imagem da NFT
             * @example https://ipfs.io/ipfs/abcdef123456/image.png
             */
            image: string;
            /** @description Lista de atributos adicionais da NFT */
            attributes?: components["schemas"]["Attribute"][];
        };
        RegisterNftDto: Record<string, never>;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    AppController_getHello: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Mensagem de saudação retornada com sucesso. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    AuthController_register: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RegisterDto"];
            };
        };
        responses: {
            /** @description Usuário registrado com sucesso. */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Dados inválidos. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AuthController_getNonce: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @example 0x… */
                    address?: string;
                };
            };
        };
        responses: {
            /** @description Nonce gerado com sucesso. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RequestNonceResponseDto"];
                };
            };
        };
    };
    AuthController_login: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoginDto"];
            };
        };
        responses: {
            /** @description JWT gerado com sucesso. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LoginResponseDto"];
                };
            };
            /** @description Assinatura inválida. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    NftController_generateMetadata: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateMetadataDto"];
            };
        };
        responses: {
            /** @description Metadata gerado com sucesso. */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Dados inválidos. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Não autorizado. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    NftController_registerNft: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RegisterNftDto"];
            };
        };
        responses: {
            /** @description NFT registrada com sucesso. */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Dados inválidos. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Não autorizado. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
